service: docker
env:
  global:
    - TERM=dumb
language: java
jdk: openjdk8
python: 3.8
install: true
addons:
  apt:
    update: true
    packages:
      - jq
      - curl
      - httpie
      - docker-ce 
      - libxml2-utils
before_install:
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 5432 5672 27017 3000 8000 8080 80 27017 5672 5432
jobs:
  include:
    #- stage: test
    #  name: gitbook
    #  script:
    #    - ./gradlew clean gitbook
    - stage: test
      name: xml-message
      script:
        - cd $TRAVIS_BUILD_DIR/xml-channel && ./mvnw
        - bash $TRAVIS_BUILD_DIR/xml-channel/target/*.jar &
        - wait_for 8080
        - http :8080
        - http :8080 message=message\ builder\ hello
        - http :8080/generic message=generic\ message\ hello
        - stop_any 8080 8000 80
    #- stage: test
    #  name: spring-integration-5-example-01
    #  script:
    #    - cd $TRAVIS_BUILD_DIR/spring-integration-5-example-01 && ./gradlew clean build
    #    - sudo mkdir -p /var/app
    #    - sudo mv -f $TRAVIS_BUILD_DIR/spring-integration-5-example-01/build/libs/*.jar /var/app/01.jar
    #    - sudo ln -s /var/app/01.jar /etc/init.d/01
    #    - sudo service 01 start
    #    - sleep 15
    #    - curl localhost:8080/sse &
    #    - sleep 5s
    #    - sudo service 01 stop
    - stage: test
      name: others
      script:
        - >
          for path in \
            xml-message \
            xml-hello \
            xml-starter \
            spring-integration-5-example-02 \
          ; do
              cd $TRAVIS_BUILD_DIR/$path && ./gradlew clean build
            done;
cache:
  directories:
  - ~/.n*
  - ~/.gradle
  - node_modules
  - gitbook/node_modules
